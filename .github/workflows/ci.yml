name: ci

on:
  pull_request:
    paths-ignore: ["**/*.md"]
  push:
    paths-ignore: ["**/*.md"]
  schedule:
    - cron: "00 00 * * *"

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all --check --verbose

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo clippy --all-targets --all-features --verbose -- --deny warnings

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --all-targets --all-features --verbose

  begin-release:
    if: startsWith(github.event.ref, 'refs/tags/')
    needs: [fmt, clippy, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/create-gh-release-action@v1
        with:
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}

  build-release:
    needs: [begin-release]
    strategy:
      matrix:
        include:
          # amd64
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-freebsd
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          # arm64
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          # i686
          - target: i686-unknown-linux-gnu
            os: ubuntu-latest
          - target: i686-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: run
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}

  publish-crate:
    needs: [begin-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo publish --locked
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}

  publish-npm:
    needs: [build-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"
      - run: npm publish --access=public
        working-directory: ./wrappers/npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  finish-release:
    needs: [build-release, publish-crate, publish-npm]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: gh release edit "${GITHUB_REF#refs/tags/}" --draft=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
